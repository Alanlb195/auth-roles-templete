version: '3.8'

services:
  # Postgres DB
  orders-db:
    image: postgres:17.4
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: auth-db
    container_name: auth-db
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - nestjs-network

  # Mailpit configuration
  mailpit:
    image: axllent/mailpit:v1.25
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - ./data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - nestjs-network

  # Minio configuration - if you want to manage images
  # minio:
  #   image: minio/minio:latest
  #   container_name: nestjs-template-minio
  #   restart: always
  #   ports:
  #     - '9000:9000'
  #     - '9001:9001'
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin
  #   volumes:
  #     - minio_data:/data
  #   command: server --console-address ":9001" /data
  #   networks:
  #     - nestjs-network

  # createbuckets:
  #   image: minio/mc
  #   container_name: nestjs-template-createbuckets
  #   depends_on:
  #     - minio
  #   entrypoint: >
  #     /bin/sh -c " sleep 5; /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin; /usr/bin/mc mb myminio/public; /usr/bin/mc mb myminio/private; /usr/bin/mc anonymous set download myminio/public; exit 0; "
  #   networks:
  #     - nestjs-network

  # Uncomment if you want to run the app in docker
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: auth-roles-api
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - orders-db
  #     - mailpit
  #     # - minio
  #   env_file:
  #     - .env
  #   networks:
  #     - nestjs-network

networks:
  nestjs-network:
    driver: bridge
